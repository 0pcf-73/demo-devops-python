name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov dj-database-url

      - name: Export environment variables for Django
        run: |
          echo "DB_NAME=postgres" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: demo.settings
        run: |
          python manage.py migrate
          pytest --junitxml=report.xml --cov=.

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --show-source --statistics
      
      - name: Build and push Docker image
        if: github.event_name == 'push'
        env:
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t ypalomac/demo-devops-python:latest .
          docker push ypalomac/demo-devops-python:latest
